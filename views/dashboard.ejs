<%- include('./layouts/header') %>
  <!--begin::Body-->

  <body class="layout-fixed sidebar-expand-lg bg-body-tertiary">
    <!--begin::App Wrapper-->
    <div class="app-wrapper">
      <%- include('./layouts/navbar-sidebar') %>
        <!--begin::App Main-->
        <main class="app-main">
          <!--begin::App Content Header-->
          <div class="app-content-header">
            <!--begin::Container-->
            <div class="container-fluid">
              <!--begin::Row-->
              <div class="row">
                <div class="col-sm-6">
                  <h3 class="mb-0">Dashboard</h3>
                </div>
                <!-- <div class="col-sm-6">
                <ol class="breadcrumb float-sm-end">
                  <li class="breadcrumb-item"><a href="#">Home</a></li>
                  <li class="breadcrumb-item active" aria-current="page">Dashboard</li>
                </ol>
              </div> -->
              </div>
              <!--end::Row-->
            </div>
            <!--end::Container-->
          </div>
          <!--end::App Content Header-->
          <!--begin::App Content-->
          <div class="app-content">
            <!--begin::Container-->
            <div class="container-fluid">

              <div class="container">

                <div class="card shadow-sm border-0 mb-4">
                  <input type="hidden" id="studentId" name="studentId" value="<%= studentInfo._id %>">
                  <div class="card-body">
                    <h4 class="card-title mb-3">Student Information</h4>
                    <div class="row">
                      <div class="col-md-6 mb-2">
                        <strong>Name:</strong> <span>
                          <%=studentInfo? studentInfo.name : ''%>
                        </span>
                      </div>
                      <div class="col-md-6 mb-2">
                        <strong>Batch Name:</strong> <span>
                          <%=studentInfo && studentInfo.batch? studentInfo.batch.name:'' %>
                        </span>
                      </div>
                      <div class="col-md-6 mb-2">
                        <strong>Email:</strong> <span>
                          <%=studentInfo? studentInfo.email:'' %>
                        </span>
                      </div>
                      <div class="col-md-6 mb-2">
                        <strong>Start Date:</strong> <span><%=studentInfo && studentInfo.batch? studentInfo.batch.startDate.toLocaleString('en-In',{
                            year: "numeric" , month: "long" , day: "numeric" }) :'' %></span>
                      </div>
                      <div class="col-md-6 mb-2">
                        <strong>Course Name:</strong> <span>
                          <%=studentInfo && studentInfo.course? studentInfo.course.name:'' %>
                        </span>
                      </div>

                    </div>
                  </div>
                </div>

                <div class="row">
                  <div class="col-md-4">
                    <div class="card-stats">
                      <div class="icon"><i class="bi bi-book-fill"></i></div>
                      <div class="title">Total Exams Taken</div>
                      <div class="value" id="total-exams-taken">0</div>
                    </div>
                  </div>
                  <div class="col-md-4">
                    <div class="card-stats">
                      <div class="icon"><i class="bi bi-mortarboard-fill"></i></div>
                      <div class="title">Average Score</div>
                      <div class="value" id="averge-score">0</div>
                    </div>
                  </div>
                  <div class="col-md-4">
                    <div class="card-stats">
                      <div class="icon"><i class="bi bi-calendar-event-fill"></i></i></i></div>
                      <div class="title">Upcoming Exams</div>
                      <div class="value" id="upcoming-exams">0</div>
                    </div>
                  </div>

                </div>


                <div class="row mt-3">
                  <div class="col-md-6">
                    <div class="card shadow-sm">
                      <div class="card-header bg-white">
                        <h5>Performance Over Date</h5>
                      </div>
                      <div class="card-body d-flex justify-content-center align-items-center">
                        <canvas id="scoreOverDateChart" class="chart-height"></canvas>
                      </div>
                    </div>
                  </div>

                  <div class="col-md-6">
                      <div class="card shadow-sm">
                        <div class="card-header bg-white">
                          <h5>Breakdown Of Correct, Wrong And Unattempted Answer</h5>
                        </div>
                        <div class="card-body d-flex justify-content-center align-items-center">
                          <canvas id="answerBreakdownChart" class="chart-height"></canvas>
                        </div>
                      </div>
                  </div>

                </div>



              </div>





            </div>
            <!--end::Container-->
          </div>
          <!--end::App Content-->
        </main>
        <!--end::App Main-->

        <%- include('./layouts/footer') %>
          <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

          <script>
            $(document).ready(function () {

              function fetchCardData() {
                const studentId = $('#studentId').val();
                $.ajax({
                  url: '/student/dashboard/cards/' + studentId,
                  type: 'GET',
                  success: function (response) {
                    if (response.status) {
                      $('#total-exams-taken').text(response.data.examsTakenCount);
                      $('#averge-score').text(response.data.averageScore);
                      $('#upcoming-exams').text(response.data.availableExamCount);
                    }

                  },
                  error:function(error){
                    if (handleAuthRedirect(error)) return;
                  }
                })

              }
              fetchCardData();

              function fetchScoreOvereDateData() {
                const studentId = $('#studentId').val();
                $.ajax({
                  url: '/student/dashboard/charts/score-over-date/' + studentId,
                  type: 'GET',
                  success: function (response) {

                    if (response.status) {
                      if (response.data.length > 0) {
                        const labels = response.data.map((item) => item.date);
                        const scores = response.data.map((item) => item.score);

                        const examTitles = response.data.map(item => `${item.date} - ${item.title}`);

                        const ctx = document.getElementById('scoreOverDateChart').getContext('2d');
                        new Chart(ctx, {
                          type: 'line',
                          data: {
                            labels: labels,
                            datasets: [{
                              label: 'Score (%)',
                              data: scores,
                              fill: false,
                              borderColor: 'rgb(75, 192, 192)',
                              tension: 0.3,
                              pointRadius: 5,
                              pointBackgroundColor: '#0d6efd'
                            }]
                          },
                          options: {
                            responsive: true,
                            plugins: {
                               title: {
                                display: true,
                                text: 'Exam Percentage Score Over Date',
                            },
                              tooltip: {
                                callbacks: {
                                  title: function (tooltipItems) {
                                    const index = tooltipItems[0].dataIndex;
                                    return examTitles[index];
                                  }
                                }
                              }
                            },
                            scales: {
                              y: {
                                beginAtZero: true,
                                title: {
                                  display: true,
                                  text: 'Score'
                                }
                              },
                              x: {
                                title: {
                                  display: true,
                                  text: 'Exam Date'
                                }
                              }
                            }
                          }
                        });


                      }
                    }

                  },
                  error:function(error){
                    if (handleAuthRedirect(error)) return;
                  }
                })

              }

              fetchScoreOvereDateData();

              function fetchAnswerTypeData() {
                const studentId = $('#studentId').val();
                $.ajax({
                  url: '/student/dashboard/charts/answer/' + studentId,
                  type: 'GET',
                  success: function (response) {

                    if (response.status) {
                      const ctx = document.getElementById('answerBreakdownChart').getContext('2d');
                      new Chart(ctx, {
                        type: 'pie',
                        data: {
                          labels: ['Correct(%)', 'Wrong(%)', 'Unattempted(%)'],
                          datasets: [{
                            data: [response.data.correctPercent,response.data.wrongPercent , response.data.unansweredPercent],
                            backgroundColor: ['#198754', '#dc3545', '#6c757d']
                          }]
                        },
                        options: {
                          responsive: true,
                          plugins: {
                            legend: {
                              position: 'bottom'
                            }
                          }
                        }
                      });
                    }

                  },
                  error:function(error){
                    if (handleAuthRedirect(error)) return;
                  }
                })

              }

              fetchAnswerTypeData();

              function handleAuthRedirect(error) {
                                const response = error.responseJSON;
                                if (error.status === 401) {
                                    window.location.href = '/student/login';
                                    return true;
                                }
                                return false;
                            }


            })
          </script>

  </body>
  <!--end::Body-->

  </html>